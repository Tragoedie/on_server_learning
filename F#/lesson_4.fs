(* 7.1.1. Íàïèøèòå ğåêóğñèâíóş ôóíêöèş fibo: int -> int, ãäå fibo(n) âû÷èñëÿåò n-å ÷èñëî Ôèáîíà÷÷è (n >= 0, fibo(0)=0, fibo(1)=1, ...). 
Ïîñëåäîâàòåëüíîñòü Ôèáîíà÷÷è íà÷èíàåòñÿ ñ äâóõ çíà÷åíèé 0,1, à n-é ıëåìåíò ğàâåí ñóììå n-1 - ãî è n-2 - ãî ıëåìåíòîâ: 0,1,1,2,3,5,8,13,...*)

let rec fibo = function
 | 0 -> 0
 | 1 -> 1
 | n -> fibo(n-1) + fibo(n-2)


(*7.1.2. Íàïèøèòå ğåêóğñèâíóş ôóíêöèş sum: int -> int, ãäå sum(n) âû÷èñëÿåò ñóììó ïåğâûõ n ÷èñåë ğÿäà 1 + 2 + 3 + ... + n-1 + n
Ïàğàìåòğ n -- íàòóğàëüíîå ÷èñëî.*)

let rec sum = function
 | 0 -> 0
 | n -> n + sum(n-1)


(*7.1.3. Íàïèøèòå ğåêóğñèâíóş ôóíêöèş sum2: int * int -> int, ãäå sum2(m, n) âû÷èñëÿåò ñóììó m + m+1 + ... + m+(n-1) + m+n, ãäå m >= 0 è n >= 0.
Èñïîëüçóéòå øàáëîíû (m,0) è (m,n).*)

let rec sum2 = function 
 | (m,0) -> m
 | (m,n) -> m + sum2(m+1, n-1)
